info.build.artifact: @project.artifactId@
info.build.name: @project.name@
info.build.description: @project.description@
info.build.version: @project.version@
server:
  port: ${port:8001}
spring:
  application:
    name: ${info.build.name}
  cloud:
    inetutils:
      ignored-interfaces:
        - docker0
        - veth.*
eureka:
  server:
    enable-self-preservation: false
    waitTimeInMsWhenSyncEmpty: 0
    #eureka server刷新readCacheMap的时间，注意，client读取的是readCacheMap，这个时间决定了多久会把readWriteCacheMap的缓存更新到readCacheMap上
    response-cache-update-interval-ms: 3000
    #eureka server缓存readWriteCacheMap失效时间，这个只有在这个时间过去后缓存才会失效，失效前不会更新，过期后从registry重新读取注册服务信息，registry是一个ConcurrentHashMap。
    responseCacheAutoExpirationInSeconds: 180
    #启用主动失效，并且每次主动失效检测间隔为3s
    eviction-interval-timer-in-ms: 3000
  instance:
    prefer-ip-address: true
    metadata-map:
      instanceId: ${info.build.name}:${random.value}
  client:
    registerWithEureka: false
    fetch-registry: false
    serviceUrl:
          defaultZone: http://${eureka.instance.ip-address}:${server.port}/eureka/